{{/*
###
# Custom Functions
###
*/ -}}

# Time ZSH loadup, read more here: https://blog.mattclemente.com/2020/06/26/oh-my-zsh-slow-to-load.html#summary
timezsh() {
  shell=${1-$SHELL}
  for i in $(seq 1 10); do /usr/bin/time $shell -i -c exit; done
}

# Time p10k loadup, read more here: https://github.com/romkatv/powerlevel10k/blob/master/README.md#is-powerlevel10k-fast-to-load
timep10k() {
  time (repeat 10 zsh -dfis <<< 'source ~/.p10k.zsh; source ~/.oh-my-zsh/custom/themes/powerlevel10k/powerlevel10k.zsh-theme')
}

# Kill apps that match string
# Based on script found on here: https://github.com/sunknudsen/privacy-guides/tree/master/how-to-make-sure-app-is-not-running-in-the-background-on-macos
function killapps() {
  IFS=$'\n'
  red=$(tput setaf 1)
  normal=$(tput sgr0)
  if [ -z "$1" ] || [ "$1" = "--help" ]; then
    printf "%s\n" "Usage: kill-apps string"
    return 0
  fi
  printf "%s\n" "Finding apps that match “$1”…"
  sleep 1
  processes=($(pgrep -afil "$1"))
  if [ ${#processes[@]} -eq 0 ]; then
    printf "%s\n" "No apps found"
    return 0
  else
    printf "%s\n" "${processes[@]}"
    printf "$red%s$normal" "Kill found apps (y or n)? "
    read -r answer
    if [ "$answer" = "y" ]; then
      printf "%s\n" "Killing found apps…"
      sleep 1
      for process in "${processes[@]}"; do
        echo $process | awk '{print $1}' | xargs sudo kill 2>&1 | grep -v "No such process"
      done
      printf "%s\n" "Done"
      return 0
    fi
  fi
}
